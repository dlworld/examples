#!/usr/bin/env stap

probe qemu.kvm.pci.plug = process("/usr/libexec/qemu-kvm").function("virtio_pci_device_unplugged")
{
        printf("###### %s \n", ppfunc());
}

probe qemu.kvm.qdev.plug = process("/usr/libexec/qemu-kvm").function("qdev_unplug")
{
        printf("###### %s \n", ppfunc());
}

probe qemu.kvm.qdev.plughandler = process("/usr/libexec/qemu-kvm").function("qdev_get_hotplug_handler").return
{
        hotplug_ctl = $$return
        printf("###### %s \n", ppfunc());
}

probe qemu.kvm.core.plugrequest = process("/usr/libexec/qemu-kvm").function("hotplug_handler_unplug_request")
{
        printf("###### %s, handler: %s, vars: %s \n", ppfunc(), $$parms$, $$vars$);
}

probe qemu.kvm.core.plug = process("/usr/libexec/qemu-kvm").function("hotplug_handler_unplug")
{
        printf("###### %s, parms: %s \n", ppfunc(), $$parms);
}

probe qemu.kvm.pcie.plug = process("/usr/libexec/qemu-kvm").function("pcie_unplug_device")
{
        printf("###### %s, parms: %s \n", ppfunc(), $$parms);
}

probe qemu.kvm.pcie.plugattention = process("/usr/libexec/qemu-kvm").function("pcie_cap_slot_push_attention_button")
{
        printf("###### %s, parms: %s \n", ppfunc(), $$parms);
}

probe qemu.kvm.drive.plug = process("/usr/libexec/qemu-kvm").function("hmp_drive_del")
{
        printf("###### %s \n", ppfunc());
}

probe qemu.kvm.device.plug = process("/usr/libexec/qemu-kvm").function("qmp_device_del")
{
        printf("###### %s \n", ppfunc());
}

probe qemu.kvm.qdev.plug { print_usyms(ubacktrace()) }
probe qemu.kvm.qdev.plughandler 
{ 
        printf("handler: %s\n", hotplug_ctl);
#printf("###### return:%lx\n", $return);
}
probe qemu.kvm.core.plug {}
probe qemu.kvm.core.plugrequest {}
probe qemu.kvm.pcie.plug { print_usyms(ubacktrace()) }
probe qemu.kvm.pcie.plugattention { print_usyms(ubacktrace()) }
probe qemu.kvm.pci.plug { print_usyms(ubacktrace()) }
probe qemu.kvm.drive.plug { print_usyms(ubacktrace()) }
probe qemu.kvm.device.plug { print_usyms(ubacktrace()) }

